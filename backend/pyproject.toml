[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "boursa-vision-backend"
version = "1.0.0"
description = "Trading Platform Backend - Clean Architecture avec Cache Intelligent"
authors = ["Quentin Sautiere <quentin@example.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = { extras = ["standard"], version = "^0.24.0" }
pydantic = {extras = ["dotenv"], version = "^2.11.7"}
pydantic-settings = "^2.1.0"
sqlalchemy = ">=2.0.32"
alembic = "^1.13.0"
asyncpg = "^0.30.0"
redis = "^5.0.1"
celery = "^5.3.4"
yfinance = "^0.2.28"
pandas = "^2.1.4"
numpy = "^1.26.2"
ta = "^0.10.2"
aiohttp = "^3.9.1"
tenacity = "^8.2.3"
structlog = "^23.2.0"
python-multipart = "^0.0.6"
python-jose = { extras = ["cryptography"], version = "^3.3.0" }
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
websockets = ">=13.0"
psycopg2-binary = "^2.9.10"
slowapi = "^0.1.9"
dependency-injector = "^4.41.0"
python-dotenv = "^1.0.0"
email-validator = "^2.1.0"
scipy = "^1.16.1"
scikit-learn = "^1.7.1"
click = "^8.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.25.2"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

# Additional testing dependencies
pytest-mock = "^3.12.0"
pytest-factoryboy = "^2.6.0"
factory-boy = "^3.3.0"
faker = "^22.5.0"
freezegun = "^1.4.0"

# Documentation
sphinx = "^7.2.6"
sphinx_rtd_theme = "^2.0.0"
sphinx-autodoc-typehints = "^2.1.0"
nbsphinx = "^0.9.3"
myst-parser = {extras = ["linkify"], version = "^4.0.1"}
sphinx-copybutton = "^0.5.2"
sphinx-mermaid = "^0.0.8"
sphinxcontrib-mermaid = "^1.0.0"
linkify-it-py = "^2.0.3"
pygments = "^2.19.2"
sphinxcontrib-plantuml = "^0.30"
sphinx-tabs = "^3.4.7"
sphinxext-opengraph = "^0.12.0"
sphinx-design = "^0.6.1"
sphinxcontrib-bibtex = "^2.6.5"
sphinxcontrib-video = "^0.4.1"
sphinxemoji = "^0.3.1"
psutil = "^7.0.0"
pytest-xdist = "^3.8.0"
aiosqlite = "^0.21.0"
pandas-stubs = "^2.3.0.250703"
pandas = "^2.3.1"
psycopg2-binary = "^2.9.10"
click = "^8.2.1"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# [tool.pytest.ini_options]
# testpaths = ["tests"]
# python_files = ["test_*.py"]
# python_classes = ["Test*"]
# python_functions = ["test_*"]
# addopts = "-v --cov=src --cov-report=term-missing"
# asyncio_mode = "auto"

[tool.pylint.MASTER]
# Specify paths to analyze
init-hook = "import sys; sys.path.append('src')"
# Ignore specific files/patterns
ignore = ["__pycache__", ".git", ".pytest_cache", ".coverage"]
# Only analyze these directories
source-roots = ["src"]

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.'MESSAGES CONTROL']
# Disable specific warnings that are not relevant
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "R0903", # too-few-public-methods
    "W0613", # unused-argument
]
